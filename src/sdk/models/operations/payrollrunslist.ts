/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class PayrollRunsListSecurity extends SpeakeasyBase {
    @SpeakeasyMetadata({
        data: "security, scheme=true;type=apiKey;subtype=header;name=Authorization",
    })
    tokenAuth: string;
}

/**
 * Deprecated. Use show_enum_origins.
 */
export enum PayrollRunsListRemoteFields {
    RunState = "run_state",
    RunStateRunType = "run_state,run_type",
    RunType = "run_type",
}

/**
 * If provided, will only return PayrollRun's with this status. Options: ('REGULAR', 'OFF_CYCLE', 'CORRECTION', 'TERMINATION', 'SIGN_ON_BONUS')
 *
 * @remarks
 *
 * * `REGULAR` - REGULAR
 * * `OFF_CYCLE` - OFF_CYCLE
 * * `CORRECTION` - CORRECTION
 * * `TERMINATION` - TERMINATION
 * * `SIGN_ON_BONUS` - SIGN_ON_BONUS
 */
export enum PayrollRunsListRunType {
    Correction = "CORRECTION",
    OffCycle = "OFF_CYCLE",
    Regular = "REGULAR",
    SignOnBonus = "SIGN_ON_BONUS",
    Termination = "TERMINATION",
}

/**
 * Which fields should be returned in non-normalized form.
 */
export enum PayrollRunsListShowEnumOrigins {
    RunState = "run_state",
    RunStateRunType = "run_state,run_type",
    RunType = "run_type",
}

export class PayrollRunsListRequest extends SpeakeasyBase {
    /**
     * Token identifying the end user.
     */
    @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=X-Account-Token" })
    xAccountToken: string;

    /**
     * If provided, will only return objects created after this datetime.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=created_after" })
    createdAfter?: Date;

    /**
     * If provided, will only return objects created before this datetime.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=created_before" })
    createdBefore?: Date;

    /**
     * The pagination cursor value.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=cursor" })
    cursor?: string;

    /**
     * If provided, will only return payroll runs ended after this datetime.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=ended_after" })
    endedAfter?: Date;

    /**
     * If provided, will only return payroll runs ended before this datetime.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=ended_before" })
    endedBefore?: Date;

    /**
     * Whether to include data that was marked as deleted by third party webhooks.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=include_deleted_data" })
    includeDeletedData?: boolean;

    /**
     * Whether to include the original data Merge fetched from the third-party to produce these models.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=include_remote_data" })
    includeRemoteData?: boolean;

    /**
     * If provided, only objects synced by Merge after this date time will be returned.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=modified_after" })
    modifiedAfter?: Date;

    /**
     * If provided, only objects synced by Merge before this date time will be returned.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=modified_before" })
    modifiedBefore?: Date;

    /**
     * Number of results to return per page.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page_size" })
    pageSize?: number;

    /**
     * Deprecated. Use show_enum_origins.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=remote_fields" })
    remoteFields?: PayrollRunsListRemoteFields;

    /**
     * The API provider's ID for the given object.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=remote_id" })
    remoteId?: string;

    /**
     * If provided, will only return PayrollRun's with this status. Options: ('REGULAR', 'OFF_CYCLE', 'CORRECTION', 'TERMINATION', 'SIGN_ON_BONUS')
     *
     * @remarks
     *
     * * `REGULAR` - REGULAR
     * * `OFF_CYCLE` - OFF_CYCLE
     * * `CORRECTION` - CORRECTION
     * * `TERMINATION` - TERMINATION
     * * `SIGN_ON_BONUS` - SIGN_ON_BONUS
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=run_type" })
    runType?: PayrollRunsListRunType;

    /**
     * Which fields should be returned in non-normalized form.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=show_enum_origins" })
    showEnumOrigins?: PayrollRunsListShowEnumOrigins;

    /**
     * If provided, will only return payroll runs started after this datetime.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=started_after" })
    startedAfter?: Date;

    /**
     * If provided, will only return payroll runs started before this datetime.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=started_before" })
    startedBefore?: Date;
}

export class PayrollRunsListResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    paginatedPayrollRunList?: shared.PaginatedPayrollRunList;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
