/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../shared";
import { AxiosResponse } from "axios";

export class TimeOffListSecurity extends SpeakeasyBase {
    @SpeakeasyMetadata({
        data: "security, scheme=true;type=apiKey;subtype=header;name=Authorization",
    })
    tokenAuth: string;
}

/**
 * Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
 */
export enum TimeOffListExpand {
    Approver = "approver",
    Employee = "employee",
    EmployeeApprover = "employee,approver",
}

/**
 * Deprecated. Use show_enum_origins.
 */
export enum TimeOffListRemoteFields {
    RequestType = "request_type",
    RequestTypeStatus = "request_type,status",
    RequestTypeStatusUnits = "request_type,status,units",
    RequestTypeUnits = "request_type,units",
    Status = "status",
    StatusUnits = "status,units",
    Units = "units",
}

/**
 * If provided, will only return TimeOff with this request type. Options: ('VACATION', 'SICK', 'PERSONAL', 'JURY_DUTY', 'VOLUNTEER', 'BEREAVEMENT')
 *
 * @remarks
 *
 * * `VACATION` - VACATION
 * * `SICK` - SICK
 * * `PERSONAL` - PERSONAL
 * * `JURY_DUTY` - JURY_DUTY
 * * `VOLUNTEER` - VOLUNTEER
 * * `BEREAVEMENT` - BEREAVEMENT
 */
export enum TimeOffListRequestType {
    Bereavement = "BEREAVEMENT",
    JuryDuty = "JURY_DUTY",
    Personal = "PERSONAL",
    Sick = "SICK",
    Vacation = "VACATION",
    Volunteer = "VOLUNTEER",
}

/**
 * Which fields should be returned in non-normalized form.
 */
export enum TimeOffListShowEnumOrigins {
    RequestType = "request_type",
    RequestTypeStatus = "request_type,status",
    RequestTypeStatusUnits = "request_type,status,units",
    RequestTypeUnits = "request_type,units",
    Status = "status",
    StatusUnits = "status,units",
    Units = "units",
}

/**
 * If provided, will only return TimeOff with this status. Options: ('REQUESTED', 'APPROVED', 'DECLINED', 'CANCELLED', 'DELETED')
 *
 * @remarks
 *
 * * `REQUESTED` - REQUESTED
 * * `APPROVED` - APPROVED
 * * `DECLINED` - DECLINED
 * * `CANCELLED` - CANCELLED
 * * `DELETED` - DELETED
 */
export enum TimeOffListStatus {
    Approved = "APPROVED",
    Cancelled = "CANCELLED",
    Declined = "DECLINED",
    Deleted = "DELETED",
    Requested = "REQUESTED",
}

export class TimeOffListRequest extends SpeakeasyBase {
    /**
     * Token identifying the end user.
     */
    @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=X-Account-Token" })
    xAccountToken: string;

    /**
     * If provided, will only return time off for this approver.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=approver_id" })
    approverId?: string;

    /**
     * If provided, will only return objects created after this datetime.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=created_after" })
    createdAfter?: Date;

    /**
     * If provided, will only return objects created before this datetime.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=created_before" })
    createdBefore?: Date;

    /**
     * The pagination cursor value.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=cursor" })
    cursor?: string;

    /**
     * If provided, will only return time off for this employee.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=employee_id" })
    employeeId?: string;

    /**
     * Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=expand" })
    expand?: TimeOffListExpand;

    /**
     * Whether to include data that was marked as deleted by third party webhooks.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=include_deleted_data" })
    includeDeletedData?: boolean;

    /**
     * Whether to include the original data Merge fetched from the third-party to produce these models.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=include_remote_data" })
    includeRemoteData?: boolean;

    /**
     * If provided, only objects synced by Merge after this date time will be returned.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=modified_after" })
    modifiedAfter?: Date;

    /**
     * If provided, only objects synced by Merge before this date time will be returned.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=modified_before" })
    modifiedBefore?: Date;

    /**
     * Number of results to return per page.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=page_size" })
    pageSize?: number;

    /**
     * Deprecated. Use show_enum_origins.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=remote_fields" })
    remoteFields?: TimeOffListRemoteFields;

    /**
     * The API provider's ID for the given object.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=remote_id" })
    remoteId?: string;

    /**
     * If provided, will only return TimeOff with this request type. Options: ('VACATION', 'SICK', 'PERSONAL', 'JURY_DUTY', 'VOLUNTEER', 'BEREAVEMENT')
     *
     * @remarks
     *
     * * `VACATION` - VACATION
     * * `SICK` - SICK
     * * `PERSONAL` - PERSONAL
     * * `JURY_DUTY` - JURY_DUTY
     * * `VOLUNTEER` - VOLUNTEER
     * * `BEREAVEMENT` - BEREAVEMENT
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=request_type" })
    requestType?: TimeOffListRequestType;

    /**
     * Which fields should be returned in non-normalized form.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=show_enum_origins" })
    showEnumOrigins?: TimeOffListShowEnumOrigins;

    /**
     * If provided, will only return TimeOff with this status. Options: ('REQUESTED', 'APPROVED', 'DECLINED', 'CANCELLED', 'DELETED')
     *
     * @remarks
     *
     * * `REQUESTED` - REQUESTED
     * * `APPROVED` - APPROVED
     * * `DECLINED` - DECLINED
     * * `CANCELLED` - CANCELLED
     * * `DELETED` - DELETED
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=status" })
    status?: TimeOffListStatus;
}

export class TimeOffListResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    paginatedTimeOffList?: shared.PaginatedTimeOffList;

    @SpeakeasyMetadata()
    statusCode: number;

    @SpeakeasyMetadata()
    rawResponse?: AxiosResponse;
}
