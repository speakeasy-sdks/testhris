/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

/**
 * * `JSON` - JSON
 *
 * @remarks
 * * `BASE64_GZIP` - BASE64_GZIP
 */
export enum ResponseType {
    Json = "JSON",
    Base64Gzip = "BASE64_GZIP",
}

/**
 * # The RemoteResponse Object
 *
 * @remarks
 * ### Description
 * The `RemoteResponse` object is used to represent information returned from a third-party endpoint.
 *
 * ### Usage Example
 * View the `RemoteResponse` returned from your `DataPassthrough`.
 */
export class RemoteResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "headers" })
    headers?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "method" })
    method: string;

    @SpeakeasyMetadata()
    @Expose({ name: "path" })
    path: string;

    @SpeakeasyMetadata()
    @Expose({ name: "response" })
    response: any;

    @SpeakeasyMetadata()
    @Expose({ name: "response_headers" })
    responseHeaders?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "response_type" })
    responseType?: ResponseType;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: number;
}
