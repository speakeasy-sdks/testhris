/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose } from "class-transformer";

export class LinkedAccountCondition extends SpeakeasyBase {
    /**
     * The common model for a specific condition.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "common_model" })
    commonModel?: string;

    /**
     * The ID indicating which condition schema to use for a specific condition.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "condition_schema_id" })
    conditionSchemaId: string;

    /**
     * The name of the field on the common model that this condition corresponds to, if they conceptually match. e.g. "location_type".
     */
    @SpeakeasyMetadata()
    @Expose({ name: "field_name" })
    fieldName: string;

    /**
     * User-facing *native condition* name. e.g. "Skip Manager".
     */
    @SpeakeasyMetadata()
    @Expose({ name: "native_name" })
    nativeName: string;

    /**
     * The operator for a specific condition.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "operator" })
    operator: string;

    /**
     * The value for a condition.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "value" })
    value?: any;
}
