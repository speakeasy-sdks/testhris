/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RemoteData } from "./remotedata";
import { Expose, Transform, Type } from "class-transformer";

/**
 * # The Benefit Object
 *
 * @remarks
 * ### Description
 * The `Benefit` object is used to represent a benefit that an employee has enrolled in.
 *
 * ### Usage Example
 * Fetch from the `LIST Benefits` endpoint and filter by `ID` to show all benefits.
 */
export class Benefit extends SpeakeasyBase {
    /**
     * The type of benefit plan
     */
    @SpeakeasyMetadata()
    @Expose({ name: "benefit_plan_type" })
    benefitPlanType?: string;

    /**
     * The company's contribution.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "company_contribution" })
    companyContribution?: number;

    /**
     * The employee on the plan.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "employee" })
    employee?: string;

    /**
     * The employee's contribution.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "employee_contribution" })
    employeeContribution?: number;

    /**
     * The day and time the benefit ended.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "end_date" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    endDate?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "field_mappings" })
    fieldMappings?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * This is the datetime that this object was last updated by Merge
     */
    @SpeakeasyMetadata()
    @Expose({ name: "modified_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    modifiedAt?: Date;

    /**
     * The name of the benefit provider.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "provider_name" })
    providerName?: string;

    @SpeakeasyMetadata({ elemType: RemoteData })
    @Expose({ name: "remote_data" })
    @Type(() => RemoteData)
    remoteData?: RemoteData[];

    /**
     * The third-party API ID of the matching object.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "remote_id" })
    remoteId?: string;

    /**
     * Indicates whether or not this object has been deleted by third party webhooks.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "remote_was_deleted" })
    remoteWasDeleted?: boolean;

    /**
     * The day and time the benefit started.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "start_date" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    startDate?: Date;
}
