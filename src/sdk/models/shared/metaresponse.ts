/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { LinkedAccountStatus } from "./linkedaccountstatus";
import { Expose, Type } from "class-transformer";

export class MetaResponse extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "has_conditional_params" })
    hasConditionalParams: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "has_required_linked_account_params" })
    hasRequiredLinkedAccountParams: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "remote_field_classes" })
    remoteFieldClasses?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "request_schema" })
    requestSchema: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    @Type(() => LinkedAccountStatus)
    status?: LinkedAccountStatus;
}
