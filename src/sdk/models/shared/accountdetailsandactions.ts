/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AccountDetailsAndActionsIntegration } from "./accountdetailsandactionsintegration";
import { Expose, Type } from "class-transformer";

/**
 * * `hris` - hris
 *
 * @remarks
 * * `ats` - ats
 * * `accounting` - accounting
 * * `ticketing` - ticketing
 * * `crm` - crm
 * * `mktg` - mktg
 * * `filestorage` - filestorage
 */
export enum AccountDetailsAndActionsCategory {
    Hris = "hris",
    Ats = "ats",
    Accounting = "accounting",
    Ticketing = "ticketing",
    Crm = "crm",
    Mktg = "mktg",
    Filestorage = "filestorage",
}

/**
 * * `COMPLETE` - COMPLETE
 *
 * @remarks
 * * `INCOMPLETE` - INCOMPLETE
 * * `RELINK_NEEDED` - RELINK_NEEDED
 */
export enum Status {
    Complete = "COMPLETE",
    Incomplete = "INCOMPLETE",
    RelinkNeeded = "RELINK_NEEDED",
}

/**
 * # The LinkedAccount Object
 *
 * @remarks
 * ### Description
 * The `LinkedAccount` object is used to represent an end user's link with a specific integration.
 *
 * ### Usage Example
 * View a list of your organization's `LinkedAccount` objects.
 */
export class AccountDetailsAndActions extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "category" })
    category?: AccountDetailsAndActionsCategory;

    @SpeakeasyMetadata()
    @Expose({ name: "end_user_email_address" })
    endUserEmailAddress: string;

    @SpeakeasyMetadata()
    @Expose({ name: "end_user_organization_name" })
    endUserOrganizationName: string;

    @SpeakeasyMetadata()
    @Expose({ name: "end_user_origin_id" })
    endUserOriginId?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id: string;

    @SpeakeasyMetadata()
    @Expose({ name: "integration" })
    @Type(() => AccountDetailsAndActionsIntegration)
    integration?: AccountDetailsAndActionsIntegration;

    /**
     * Whether a Production Linked Account's credentials match another existing Production Linked Account. This field is `null` for Test Linked Accounts, incomplete Production Linked Accounts, and ignored duplicate Production Linked Account sets.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "is_duplicate" })
    isDuplicate?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "status" })
    status: Status;

    @SpeakeasyMetadata()
    @Expose({ name: "status_detail" })
    statusDetail?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "webhook_listener_url" })
    webhookListenerUrl: string;
}
