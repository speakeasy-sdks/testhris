/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RemoteData } from "./remotedata";
import { Expose, Transform, Type } from "class-transformer";

/**
 * * `SAVINGS` - SAVINGS
 *
 * @remarks
 * * `CHECKING` - CHECKING
 */
export enum BankInfoAccountType {
    Savings = "SAVINGS",
    Checking = "CHECKING",
}

/**
 * # The BankInfo Object
 *
 * @remarks
 * ### Description
 * The `BankInfo` object is used to represent the Bank Account information for an Employee.
 *
 * ### Usage Example
 * Fetch from the `LIST BankInfo` endpoint and filter by `ID` to show all bank information.
 */
export class BankInfo extends SpeakeasyBase {
    /**
     * The account number.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "account_number" })
    accountNumber?: string;

    /**
     * The bank account type
     *
     * @remarks
     *
     * * `SAVINGS` - SAVINGS
     * * `CHECKING` - CHECKING
     */
    @SpeakeasyMetadata()
    @Expose({ name: "account_type" })
    accountType?: BankInfoAccountType;

    /**
     * The bank name.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "bank_name" })
    bankName?: string;

    /**
     * The employee with this bank account.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "employee" })
    employee?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "field_mappings" })
    fieldMappings?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * This is the datetime that this object was last updated by Merge
     */
    @SpeakeasyMetadata()
    @Expose({ name: "modified_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    modifiedAt?: Date;

    /**
     * When the matching bank object was created in the third party system.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "remote_created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    remoteCreatedAt?: Date;

    @SpeakeasyMetadata({ elemType: RemoteData })
    @Expose({ name: "remote_data" })
    @Type(() => RemoteData)
    remoteData?: RemoteData[];

    /**
     * The third-party API ID of the matching object.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "remote_id" })
    remoteId?: string;

    /**
     * Indicates whether or not this object has been deleted by third party webhooks.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "remote_was_deleted" })
    remoteWasDeleted?: boolean;

    /**
     * The routing number.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "routing_number" })
    routingNumber?: string;
}
