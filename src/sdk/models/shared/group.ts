/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RemoteData } from "./remotedata";
import { Expose, Transform, Type } from "class-transformer";

/**
 * The group type
 *
 * @remarks
 *
 * * `TEAM` - TEAM
 * * `DEPARTMENT` - DEPARTMENT
 * * `COST_CENTER` - COST_CENTER
 * * `BUSINESS_UNIT` - BUSINESS_UNIT
 * * `GROUP` - GROUP
 */
export enum GroupType {
    Team = "TEAM",
    Department = "DEPARTMENT",
    CostCenter = "COST_CENTER",
    BusinessUnit = "BUSINESS_UNIT",
    Group = "GROUP",
}

/**
 * # The Group Object
 *
 * @remarks
 * ### Description
 * The `Group` object is used to represent any subset of employees, such as `PayGroup` or `Team`. Employees can be in multiple Groups.
 *
 * ### Usage Example
 * Fetch from the `LIST Employee` endpoint and expand groups to view an employee's groups.
 */
export class Group extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "field_mappings" })
    fieldMappings?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * This is the datetime that this object was last updated by Merge
     */
    @SpeakeasyMetadata()
    @Expose({ name: "modified_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    modifiedAt?: Date;

    /**
     * The group name.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "name" })
    name?: string;

    /**
     * The parent group for this group.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "parent_group" })
    parentGroup?: string;

    @SpeakeasyMetadata({ elemType: RemoteData })
    @Expose({ name: "remote_data" })
    @Type(() => RemoteData)
    remoteData?: RemoteData[];

    /**
     * The third-party API ID of the matching object.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "remote_id" })
    remoteId?: string;

    /**
     * Indicates whether or not this object has been deleted by third party webhooks.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "remote_was_deleted" })
    remoteWasDeleted?: boolean;

    /**
     * The group type
     *
     * @remarks
     *
     * * `TEAM` - TEAM
     * * `DEPARTMENT` - DEPARTMENT
     * * `COST_CENTER` - COST_CENTER
     * * `BUSINESS_UNIT` - BUSINESS_UNIT
     * * `GROUP` - GROUP
     */
    @SpeakeasyMetadata()
    @Expose({ name: "type" })
    type?: GroupType;
}
