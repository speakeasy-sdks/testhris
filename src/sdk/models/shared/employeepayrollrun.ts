/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Deduction } from "./deduction";
import { Earning } from "./earning";
import { RemoteData } from "./remotedata";
import { Tax } from "./tax";
import { Expose, Transform, Type } from "class-transformer";

/**
 * # The EmployeePayrollRun Object
 *
 * @remarks
 * ### Description
 * The `EmployeePayrollRun` object is used to represent an employee's pay statement for a specific payroll run.
 *
 * ### Usage Example
 * Fetch from the `LIST EmployeePayrollRun` endpoint and filter by `ID` to show all employee payroll runs.
 */
export class EmployeePayrollRun extends SpeakeasyBase {
    /**
     * The day and time the payroll run was checked.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "check_date" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    checkDate?: Date;

    @SpeakeasyMetadata({ elemType: Deduction })
    @Expose({ name: "deductions" })
    @Type(() => Deduction)
    deductions?: Deduction[];

    @SpeakeasyMetadata({ elemType: Earning })
    @Expose({ name: "earnings" })
    @Type(() => Earning)
    earnings?: Earning[];

    /**
     * The employee whose payroll is being run.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "employee" })
    employee?: string;

    /**
     * The day and time the payroll run ended.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "end_date" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    endDate?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "field_mappings" })
    fieldMappings?: Record<string, any>;

    /**
     * The total earnings throughout a given period for an employee before any deductions are made.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "gross_pay" })
    grossPay?: number;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * This is the datetime that this object was last updated by Merge
     */
    @SpeakeasyMetadata()
    @Expose({ name: "modified_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    modifiedAt?: Date;

    /**
     * The take-home pay throughout a given period for an employee after deductions are made.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "net_pay" })
    netPay?: number;

    /**
     * The payroll being run.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "payroll_run" })
    payrollRun?: string;

    @SpeakeasyMetadata({ elemType: RemoteData })
    @Expose({ name: "remote_data" })
    @Type(() => RemoteData)
    remoteData?: RemoteData[];

    /**
     * The third-party API ID of the matching object.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "remote_id" })
    remoteId?: string;

    /**
     * Indicates whether or not this object has been deleted by third party webhooks.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "remote_was_deleted" })
    remoteWasDeleted?: boolean;

    /**
     * The day and time the payroll run started.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "start_date" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    startDate?: Date;

    @SpeakeasyMetadata({ elemType: Tax })
    @Expose({ name: "taxes" })
    @Type(() => Tax)
    taxes?: Tax[];
}
