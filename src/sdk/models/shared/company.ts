/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { RemoteData } from "./remotedata";
import { Expose, Transform, Type } from "class-transformer";

/**
 * # The Company Object
 *
 * @remarks
 * ### Description
 * The `Company` object is used to represent a company within the HRIS / Payroll system.
 *
 * ### Usage Example
 * Fetch from the `LIST Companies` endpoint and filter by `ID` to show all companies.
 */
export class Company extends SpeakeasyBase {
    /**
     * The company's display name.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "display_name" })
    displayName?: string;

    /**
     * The company's Employer Identification Numbers.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "eins" })
    eins?: string[];

    @SpeakeasyMetadata()
    @Expose({ name: "field_mappings" })
    fieldMappings?: Record<string, any>;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;

    /**
     * The company's legal name.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "legal_name" })
    legalName?: string;

    /**
     * This is the datetime that this object was last updated by Merge
     */
    @SpeakeasyMetadata()
    @Expose({ name: "modified_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    modifiedAt?: Date;

    @SpeakeasyMetadata({ elemType: RemoteData })
    @Expose({ name: "remote_data" })
    @Type(() => RemoteData)
    remoteData?: RemoteData[];

    /**
     * The third-party API ID of the matching object.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "remote_id" })
    remoteId?: string;

    /**
     * Indicates whether or not this object has been deleted by third party webhooks.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "remote_was_deleted" })
    remoteWasDeleted?: boolean;
}
